import gzip
import base64
import os
from pathlib import Path
from typing import Dict


# this is base64 encoded source code
file_data: Dict = {'imet/make_submission.py': 'H4sIAH4wt1wC/22TTWvkMAyG7/kVvjnDTt3dPQ7kMLD3LmVupRhNLM+4JHawnNLur1/Z+YQ2hIRIj/K+tmTXDyEmAfE2QCSsKjcFBvAGSPA9mKqyMfRCjcl1JGagR/Da2DllIAFhWpJ/zpezfn56uszpHpxfclfnIbp/qIeIxrXJBV9VlUErMlUfTpXgq7iJolmdqXO8jT369Ldk6kPBOMvMBCswRsNMLdlabjIkj4K1b9TIH/KwEWFMw5j2kYeHdI9I99AZrkmfAza2C5COgn3C2KXmp/q98rRZKK9sgmaDBP3Qoabx2jsiNpFZoyKC0S291wXK17pl4lHIL1WKWXbivMEP3Yaukc7Mho3N+i+v5cOGKLYFM1/8qd0enFZFY3de7sbWG/W90lpkLBcVov7qtMT3BaRgGNCb2tjF8STcBt9C4jDt4vNc7eCX0yvHvxkbZtQ7dCMS92jpV1MWvH7u/sw0G+k+6xsm3XZAlAvhw1Hza8GUhx6ZlZBSdNcxoXaG5JJNoTStSExTcxR33j6MzSWOeJgHeSdQu4T9PNMR0xi9kEKqt8Cj3vJpyg3jN2845ZURj27uWq5S+cFzJJzdZbMGB7TOTrUWDZvVOh8dreWkM52j6j8RT2H62wMAAA==', 'imet/utils.py': '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', 'imet/dataset.py': 'H4sIAH4wt1wC/71VXWvbMBR996/Qy7BcXKXtYDBDB2nahrLQlDRvIRjFlj2BbBlJCetK//uubDn+2FfYQ02Ibenec889OpYyJQtUUfNN8B3iRSWVQU/w6mV2wrxUvMzb8RkVgu4EC9GCa+N5bjg5XLWPFS1TqhH8qrRBeHpYtOkPBc1ZG2mkStoi9pHsDReapNTQNv4WnjWDOnUUMYqWOpOq0G2AYaWWKj5OuMAaqY1ZPsZfp/P54s7zvMd4tpg+P989o2t0eXnx0budrqfxarlcw4BtGvuETHhZ7c2EF8ycX11cfj7P8kPyyUc867AQE5ohn0wsXT8A6ERQrdFaUV462tjdg8hDcKUsQ3HMS27iGGsmshApKU1U1w1RmkUgGbE594oWLKyTBhe38nXNRr3lSNlun0doJ6WATtZqz1xVe+l9xRQOyLF60E0BDxJbHpBmb6OZNIPxNBuNjohAyGhkjGLZWSB793pqCFY6MXp0FTN7VSKYwy2JoJ+UM8MNK44q8vR7hHhpehB2Huq16YQLmWwgbusNtIQQIWna8W46wwPpLVbYEyr8vQhuDa57HXcyG6qANZRrnP6DKanx0YxdHAChxFq3rMsSaoziu71hMU810ZXgBvfa7KA30D+GzGBrnT2WsqYautDOq+upc+g7GNQYOl6k9/EeFLa6G/pfvkNnHcw/PHiC/dCHIfqJdjzRgcEflr12Ek9h3S33vxu+KdVf9pM3nXsKW6ITYdBOvwmLHAxCRvi4fnchmSsxlIloemDYb74xUpW534S7rsdnQovYa3/MqOk1QOdfmiOK1P/DVuCMI7xQjKZYG4Vr205Q5r86ed8aJsEvScnBzKSQCrvlsGOz5WK5im/mq6vV/GbAvqlvjzGqFH0ZkgfX2Y0Ajzjbs3gDpLZRHwlEMCzFrxUp4Wt1m4cf+8HmYltvNJXdZiwUyYXcYf+s6eAt8H4CN4yOsxMIAAA=', 'imet/loss.py': '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', 'imet/models.py': 'H4sIAH4wt1wC/81W32+bMBB+56+w1IeCxFwgTdVGykOlLn1Y201b36bJcsE0lohhtmmjTfvfd+aXoaEt2appSImAu+/uO9/nM6nMNygtRazzPFOIb4pcalRQqTnNHKd51rmM105qfKvb1k+I3kssRPu+CshzQTNEFVrVTri1KiaYNobrQfwHrgCCN3nCgAmYbxtcqbml9vGGfDi/vLx67zhOnFGl0PnD/Scg7wqBr/OkzJi3cBBcCUtRmstHKhNXsSz10baxmEsyXUqBVpg+3JMC8FHibsEFqzUt2Ndo8c2DDCZGLBnVjABnF34kzpSPCoBLygVLFugOwE3gA55agoiKpO9Ye5g/U/4SNcFczxqq2omgG2btmFQvCLFuj4zfr7UiBdVrcEwPMT7ioij10U8b4dfgARd6fThggLOcJkRpU1vCY+3WTTRv3X4Cr+EHTWF1DUP6tsKlva0xzRqDZ9esz0zdmIUc6RUhXHBNSNMsUW5IhWFqGYbBzO9a11291LeyZH7LaXmNFSOSKcG2eh6QWbQ9TnyUyLzIS71cUSilJwVVFky6Hu4IeNYEVHBd78sy2Km9jzYaMxKDKK1YrRPb3BHFf5iOh6fHs6gzgJYaxotB6V1UWBxNMkhJpemHwF/Y95IJs3PdncUC80UdzfX8MetVFcht6Qwa8ATRI9+J4nV2LyZw7JaFvq1BeZJuVCWF3U07lgNXCKaZNDtq+gBoY7lbb6jRaE+RvqzPSnNWoLe4UieI83+V5avqS+O3E10vKOaCpFBSCQv01xpsOe6T5s+UCBHfToAXTCi2/5jcU4GJyQKPYRT+M9W1h+2o5LrFrOrhKWfDyTHeY+v81j3tRd63t6B4oG7V0bAyPR66rGAQZKULDz6CIzyjMavOMm8sVLt6xt3DD5w9mjtspqkbeD56F3rPMbC1VOCnNcM7OKLrmRSeArD5AnSbWbg7ucJTzzmob2fHO4D+Udw6eU4786bEnwetfxiEkwgFYYeYR5MQ8wiaqdiztMY+KCpiDWY7FWS/QnrYsbrGweDZonubtgduB8Zz29vCTs6mwk7OLCwKpmaLgkG2ySRPAPYbkjT0oYwMAAA=', 'imet/transforms.py': 'H4sIAH4wt1wC/61VyW7bMBC96yuI9EKlqiIbdpAa0aFNG9RAEBRpboFhsDYlEZVIl6LjJF/fGVIbbSftoQIEbm/eLOTMiGqjtCGaybWqAuFWFTNFEGRaVeT7/IY0u/OK5dztGqVXxaOohZKxAdk6U7qqWyANCHz36p7LWumI3MIhK8ULj8iVAkgNkzteuw0uDddXWm1gzxph55bBrb8pLV6UNKy8LsUmDIJgVbK6bk5/AMsaRWZW5OTkxO2TFewRU3CSi0cu0Y/YOgC2E9b4S9AGK6cyiwVVuZCstAcEMO5v4aze8BUGywh1VGwIiC0CiWaOrgHXEIuSa8LXudMtMAIbVaKQnJEvPGPb0sx6k+PP85v57ddPd62LgZ2seUaWSyGFWS5pzcssIi6mHmHqU7jIel8l5NIZnk7OphHc/lO7np5NXhPQnKVJPG7xuByFsw6M9sTW7bSPcnfgWQgIb+1De+sA1y/2QJ3JCOoWR5jAzpYHpkdYGkAzHUZ6BffWRVpU+cBbeP6EGcOrjQFf8LnknI6SAQK/hhtEbWQekgU57VejhQc2TOfctPa4BxhvpcBMo54/kW99CKSeb1a1jcfSPsy36Cws2g9qGHhkO3djVKutXFMsFnH9Wxs6NPnUUxmGocdQ/APD2QGDRyGy1gs30JBckiSezg7e6y6y+oqI7A4oduTSvxDM98LbHC0OKZ9GfRBxQF+SyCP6QHbhgdzzX+RGKFfseWpNrfLm5WBdo/RpFAFZhIa8RwefcSzCQ41QKTkEttVA0pRQDEh4RInmZqul1aJteaa0S+Ooz+gwOpLEA7p35Boy5Sdb/erTC3IHK4Gr+kNWv1Yd4205bEFPBw2jp+lBjQs2SFYpeo6+BtCm4IF3zQqZXC+iD4NmY3nHFxfh6x2IwtnCMvLa/GdC7JdvULYtlTZsXWOlFWcyfUjiyQUUZBim53ZIzhdwWWaNR+PxR9wbjydumC6c3j+kTaPZAggAAA==', 'imet/senet.py': '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', 'imet/finetune_lovasz.py': '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', 'imet/__init__.py': 'H4sIAH4wt1wC/8vMLcgvKlFILjPi4uICknrFqSV+pbkhGUWpiSnFGgaaCgrKCmmZFQoF+SWpeSWZiTkKBZUl+UXJGQrl+UXZqUUKmcXFpanFXABAVNvYSQAAAA==', 'imet/make_folds.py': 'H4sIAH4wt1wC/31UTY/TMBC951f4FgdSoyK4VDJSxQqJC4vQ3qLK8sZOsTaxgz1B7L9n/JFuW7pEVRPPx5t5zx6baXYeiPTHWfqgq8G7ifRuHHUPxtlATA5QepDLCMr00JLPbrGgfVV8XlrlpmpdzriUgeBvVqsNfikMSOBMSZBBw4p8t3/Yix/39w9VVWEVMsknLQY3qkBtfu+IsdCQzScEZHeY/cXLSe8qgo8aCI9mr6USffhNT3DkHanBS2MZmusmRfdjEH1sPmBWYUHRSAbn0SlD0MjYImpXSwBvHhfQwqhQH1gAz8I8GqAZ6+aTcRJGgcvBkYe4qH4mKI30TmHR2W22B/KGjNpSNawuTwzoKUJHNVn8Qy8LcppHTQcve75ty2aIABI0//C+YZjkYcGQQJv29c4JOJAjLyWb3Sky0uFkMpbG8uxCllWQljzpZz7K6VHJmLA7U7rDz8OLZFmJVYWODu21OB2aUk7iPETCSOqo1+PQHE5g2FVOKh12eRHzBIKkBaaf1TzrJCvFgtYqU/tqlf5z2SnilrD+pzO9pt2Qu7qN/h9542OGksX5S+tX2oTupZcDlo+26sbxen0zdtXlibwSF9dZX/KWk20Zoq6O9notmIl4DYuPw3CaTJS4wKfbwmP4enOwvT8uk7bwPXnKkOQwJpUSsvhpvdnYTapStwSeZ83x/LfrQPCPORPD4wEpAOkVIUIBTnP/71XBYwhbD0qJZODS1ZA4hnQdtCghCsy/OasbpIc7I4TFW0WIuDm1EJGsEHVmm5lXfwGNKmW3LQUAAA==', 'imet/main.py': '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', 'setup.py': 'H4sIAH4wt1wC/0srys9VKE4tKS0oyc/PKVbIzC3ILyqBiHBxgSkNLgUgyEvMTbVVz8xNLVHXAQsUJCZnJ6anFttGQ0Rjdbg0uQA9nF1NTwAAAA=='}


for path, encoded in file_data.items():
    print(path)
    path = Path(path)
    path.parent.mkdir(exist_ok=True)
    path.write_bytes(gzip.decompress(base64.b64decode(encoded)))


def run(command):
    os.system('export PYTHONPATH=${PYTHONPATH}:/kaggle/working && ' + command)


run('python setup.py develop --install-dir /kaggle/working')
run('python -m imet.make_folds')
run('python -m imet.main train model_resnet152_2 --fold 2 --n-epochs 25')
run('python -m imet.main predict_test model_resnet152_2')
run('python -m imet.make_submission model_resnet152_2/test.h5 submission.csv --threshold 0.1')
